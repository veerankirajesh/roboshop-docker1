networks:
  default:
    driver: bridge
    name: roboshop
    external: true #I created network already using docker network create roboshop
volumes:
  mongodb:
  redis:
  mysql:
  rabbitmq: # docker volume create rabbitmq
services:
  mongodb:
    image: rajesh028/mongodb:1
    container_name: mongodb
    volumes:
    - mongodb:/data/db
  catalogue:
    image: rajesh028/catalogue:1
    container_name: catalogue
    depends_on:
    - mongodb
  redis:
    image: redis:7.0
    container_name: redis
    volumes:
    - redis:/data
  user:
    image: rajesh028/user:1
    container_name: user
    depends_on:
    - redis
    - mongodb
  cart:
    image: rajesh028/cart:1
    container_name: cart
    depends_on:
    - catalogue
    - redis
  mysql:
    image: rajesh028/mysql:1
    container_name: mysql
    volumes:
    - mysql:/var/lib/mysql
  shipping:
    image: rajesh028/shipping:1
    container_name: shipping
    depends_on:
    - mysql
    - cart
  rabbitmq:
    image: rabbitmq:3
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: roboshop
      RABBITMQ_DEFAULT_PASS: roboshop123
    volumes:
    - rabbitmq:/var/lib/rabbitmq
  payment:
    image: rajesh028/payment:1
    container_name: payment
    environment:
      CART_HOST: cart
      CART_PORT: 8080
      USER_HOST: user
      USER_PORT: 8080
      AMQP_HOST: rabbitmq
      AMQP_USER: roboshop
      AMQP_PASS: roboshop123
    depends_on:
    - rabbitmq
    - cart
    - user
  frontend:
    image: rajesh028/frontend:1
    container_name: frontend
    ports:
    - "80:80"
    depends_on:
    - catalogue
    - user
    - cart
    - shipping
    - payment
      